#!/bin/sh

# create-fedora-live-xen-bootstrap

# Script to create a Fedora Live Bootstrap iso with livemedia-creator.

# This builds the live media in a mock chroot.  

# See: https://fedoraproject.org/wiki/Livemedia-creator-_How_to_create_and_use_a_Live_CD
#   for information on how to setup livemedia-creator with mock and lorax.

set -e

# Note: As of November 2022 (Fedora Release 37) this script is capable of building images for release 36 and 37.
# Both releases will run with Xen in KVM with bios booting.  Neither will run with EFI because there is no
# multiboot2 support.  Also, SuperMicro bios does not recognize release 37 images because the disk label has been
# changed to gpt.

# Verify that the Fedora mock configuration is the same as the running o/s.
# The symbolic link '/etc/mock/default.cfg' does not get updated after a system upgrade.
. /etc/os-release
if [ "$VERSION_ID" = "$(ls -l /etc/mock/default.cfg | grep -o 'fedora-[0-9][0-9]' | cut -d '-' -f 2)" ]; then
  echo "The /etc/mock/default.cfg link is linked correctly."
else
  echo "The /etc/mock/default.cfg link is not linked correctly."
  exit 1
fi

XEN_OPTS="dom0_mem=4096M,max:8192M dom0_max_vcpus=2 dom0_vcpus_pin=true loglvl=all guest_loglvl=all iommu=on,verbose msi=1 conring_size=4M com1=115200,8n1 console=com1,vga"
# Note: PVH dom0 will not run on KVM.  It does run on bare metal with i/o virtualization.
XEN_OPTS="dom0=pvh $XEN_OPTS"

[ "$1" != "diff" ] && [ "$1" != "stage2" ] && [ -z "$RELEASE" ] && RELEASE="$1"
RELEASE="${RELEASE:-$VERSION_ID}"
echo "Release is ${RELEASE}."

MOCKDIR="fedora-${RELEASE}-x86_64"

PROJECT="Fedora-Bootstrap-Live"
BUILD="home/build"
BASE="/var/lib/mock/$MOCKDIR/root"

USR="$(id -u)"
GRP="$(id -g)"

if [ ! -d /var/lib/mock/$MOCKDIR/root/usr/share/lorax/templates.d/99-generic ]; then
  echo "Error: Lorax templates not installed in mock environement."
  echo "Do you need to run 'install-mock-livemedia-creator'?"
  exit 1
fi

if [ -e ./set-pass ]; then
  . ./set-pass
fi

# Create the bootstrap.ks file from the startup files.
./make-bootstrap-ks

# Create the fsimage build script.
cat >build-fsimage.sh <<-__EOF__
	#!/bin/sh

	cd /$BUILD

	rm -rf tmp
	rm -rf lmc
	rm -rf image
	rm -rf logs
	mkdir -p tmp
	mkdir -p logs/image
	mkdir -p logs/iso

	# This has been biting me lately.
	rm -f /var/run/anaconda.pid

	# Create the live file system image.
	livemedia-creator --ks fedora-live-workstation-flat.ks \
	  --no-virt \
	  --lorax-templates=./share/lorax/templates.d/99-generic/ \
	  --logfile=./logs/image/image.log \
	  --resultdir=./image \
	  --make-fsimage \
	  --image-name=livexen.img \
	  --fs-label=LiveXen \
	  --releasever=${RELEASE} \
	  --tmp=./tmp || exit 1

	# Make updates to image.

	rm -rf mnt
	mkdir mnt
	mount ./image/livexen.img ./mnt
	cat >>./mnt/etc/sysconfig/xencommons <<-EOD
	# Enable xenstore domain.
	XENSTORETYPE=domain
	XENSTORE_MAX_DOMAIN_SIZE=8:1/128
	EOD

	# Create generic xen.gz symbolic link to xen image executable.
	# Starting with Fedora 36, xen package no longer sets default xen symlink.
	if [ ! -L ./mnt/boot/xen.gz ]; then
	  xenimg="\$(ls ./mnt/boot/xen-*.gz | cut -d '/' -f 4)"
	  ln -sf \$xenimg  ./mnt/boot/xen.gz
	  echo "Xen image is: \${xenimg}."
	fi
	echo "Default xen link is:"
	ls -l ./mnt/boot/xen.gz
	
	# Reset default target to multi-user.  Use 'systemctl isolate graphical.target' to enable gui.
	rm -f ./mnt/etc/systemd/system/default.target
	ln -s /lib/systemd/system/multi-user.target ./mnt/etc/systemd/system/default.target

	umount ./mnt
	sleep 1s
	rmdir ./mnt
	
	# Change the ownership of the image.
	chown $USR:$GRP /$BUILD/image/livexen.img
	__EOF__

# Make the build script executable.
chmod +x build-fsimage.sh

# Create the iso build script to be executed by mock.
cat >build-iso.sh <<-__EOF__
	#!/bin/sh

	cd /$BUILD

	# Delete the results directory in case stage 2 failed previously.
	rm -rf ./lmc

	# Empty the tmp directory.
	rm -rf tmp
	mkdir -p tmp
	
	# Create the live iso from the "enhanced" file system image.
	livemedia-creator --ks fedora-live-workstation-flat.ks \
	  --no-virt \
	  --lorax-templates=./share/lorax/templates.d/99-generic/ \
	  --resultdir=./lmc \
	  --fs-image=./image/livexen.img \
	  --make-iso \
	  --iso-only \
	  --iso-name=${PROJECT}-x86_64-${RELEASE}.iso \
	  --volid=${PROJECT}-${RELEASE} \
	  --logfile=./logs/iso/iso.log \
	  --project=${PROJECT} \
	  --releasever=${RELEASE} \
	  --nomacboot \
	  --tmp=./tmp

	chown -R $USR:$GRP ./lmc
	chown -R $USR:$GRP ./logs

	rm -rf tmp
	__EOF__

# Make it executable.
chmod +x build-iso.sh

# Ensure the build directory is writable.  Use mock to avoid sudo.
if touch /$BASE/$BUILD/write-test 2>/dev/null ; then
  rm /$BASE/$BUILD/write-test
else
  mock -r $MOCKDIR --shell --isolation=simple <<-EOD
  	# Create the build directory.
	mkdir -p /$BUILD
	# Make it writable.
	chown -R $USR:$GRP /$BUILD
	EOD
fi

# Move the build scripts into mock.
mv build-fsimage.sh $BASE/$BUILD
mv build-iso.sh $BASE/$BUILD

# Copy the kickstart files into mock.
mv -f    bootstrap.ks                $BASE/$BUILD
cp -a -f fedora-live-base.ks         $BASE/$BUILD
cp -a    fedora-live-workstation.ks  $BASE/$BUILD

# Copy the modified templates into the build environment.
x86tmpl="x86-pre-37.tmpl"
[[ "${RELEASE}" > "36" ]] && x86tmpl="x86.tmpl"
cp -p $x86tmpl       $BASE/$BUILD/x86.tmpl
cp -p grub2-efi.cfg  $BASE/$BUILD/
# The bios boot loader was changed from syslinux to grub2 in release 37.
boot_config="isolinux.cfg"
if [[ "${RELEASE}" > "36" ]]; then
  boot_config="grub2-bios.cfg"
  sed -i 's@/isolinux/xen.gz@/images/pxeboot/xen.gz@' $BASE/$BUILD/grub2-efi.cfg
fi
cp -p ${boot_config} $BASE/$BUILD/

# Fixup the XEN_OPTS in the templates.
sed -i "s/XEN_OPTS/$XEN_OPTS/" \
  $BASE/$BUILD/grub2-efi.cfg

sed -i "s/XEN_OPTS/$XEN_OPTS/" \
  $BASE/$BUILD/$boot_config

# Do preliminary work in mock to avoid sudo.
mock -r $MOCKDIR --shell --isolation=simple <<-EOX
	cd /$BUILD

	# Recreate the share directory in mock.
	rm -rf share

	# Copy the baseline lorax templates.
	mkdir -p                   share
	cp -a    /usr/share/lorax  share
	chown -R $USR:$GRP         share

	# Move the modified templates to the build directories.
	mv -f x86.tmpl       share/lorax/templates.d/99-generic/live/
	mv -f ${boot_config} share/lorax/templates.d/99-generic/live/config_files/x86/
	mv -f grub2-efi.cfg  share/lorax/templates.d/99-generic/live/config_files/x86/

	# Fixup the repo, if needed.
	cp /usr/share/spin-kickstarts/fedora-repo.ks .
	cp /usr/share/spin-kickstarts/fedora-repo-rawhide.ks .
	cp /usr/share/spin-kickstarts/fedora-repo-not-rawhide.ks .
	if [ -n "\$(grep "[[:space:]]*%include.*fedora-repo-rawhide.ks" fedora-repo.ks)" ]; then
	  echo "Setting repo to not rawhide."
	  sed -i "s/[[:space:]]*%include/# %include/" fedora-repo.ks
	  sed -i "s/#.*fedora-repo-not-rawhide.ks/%include fedora-repo-not-rawhide.ks/" fedora-repo.ks
	fi
	if [[ "${RELEASE}" > "36" ]]; then
	  # Release 37+ no longer contains the x86-baremetal-tools group.
	  echo "Removing the x86-baremetal-tools group."
	  sed -i "s/^@x86-baremetal-tools/#@x86-baremetal-tools/" fedora-live-base.ks
	else
	  echo "Not removing the x86-baremetal-tools group."
	fi

	# Flatten the kickstart file.
	cp /usr/share/spin-kickstarts/fedora-workstation-common.ks .
	ksflatten -c fedora-live-workstation.ks -o fedora-live-workstation-flat.ks

	# Set the user password.
	[ -n '$USER_PW' ] && sed -i '/^rootpw.*/a \
	user --name=admin --password=$USER_PW --iscrypted --gecos="System Administrator"' fedora-live-workstation-flat.ks

	# Do the diffs.
	echo >changes.diff

	echo "fedora-live-workstation.ks:" >>changes.diff
	diff -w /usr/share/spin-kickstarts/fedora-live-workstation.ks fedora-live-workstation.ks >>changes.diff || true
	echo >>changes.diff

	echo "fedora-live-base.ks:" >>changes.diff
	diff -w /usr/share/spin-kickstarts/fedora-live-base.ks fedora-live-base.ks >>changes.diff || true
	echo >>changes.diff

	echo "x86.tmpl:" >>changes.diff
	diff -w /usr/share/lorax/templates.d/99-generic/live/x86.tmpl share/lorax/templates.d/99-generic/live/x86.tmpl >>changes.diff || :
	echo >>changes.diff

	echo "${boot_config}:" >>changes.diff
	diff -w /usr/share/lorax/templates.d/99-generic/live/config_files/x86/${boot_config} share/lorax/templates.d/99-generic/live/config_files/x86/${boot_config} >>changes.diff || :
	echo >>changes.diff

	echo "grub2-efi.cfg:" >>changes.diff
	diff -w /usr/share/lorax/templates.d/99-generic/live/config_files/x86/grub2-efi.cfg share/lorax/templates.d/99-generic/live/config_files/x86/grub2-efi.cfg >>changes.diff || :
	echo >>changes.diff

	# Clean your room.
	rm -f bootstrap.ks
	rm -f fedora-live-base.ks
	rm -f fedora-live-workstation.ks
	rm -f fedora-repo.ks
	rm -f fedora-repo-not-rawhide.ks
	rm -f fedora-workstation-common.ks
	chown $USR:$GRP changes.diff
	EOX

# Get the diiferences from the mock environment.
mv $BASE/$BUILD/changes.diff xen-bootstrap-iso-fedora.diff

# Quit now if only doing difference listing.
[ "$1" = "diff" ] && diff="true"
[ "$2" = "diff" ] && diff="true"

if [ -z "$diff" ]; then

  [ "$1" = "stage2" ] && s2="true"
  [ "$2" = "stage2" ] && s2="true"
  [ "$3" = "stage2" ] && s2="true"

  if [ -z "$s2" ]; then
    # Build the file system image in mock.
    time mock -r $MOCKDIR --shell --isolation=simple --enable-network \
      /$BUILD/build-fsimage.sh
  fi

  # Build the iso in mock.
  time mock -r $MOCKDIR --shell --isolation=simple --enable-network \
    /$BUILD/build-iso.sh

  # Get the iso image from the mock environment.
  mv -f $BASE/$BUILD/lmc/*.iso .

  # Get the log files.
  rm -rf logs
  mv $BASE/$BUILD/logs .

  # Relink the default image.
  ln -sf ~/git/live-xen-fedora/Fedora-Bootstrap-Live-x86_64-${RELEASE}.iso ~/Fedora-Bootstrap-Live-x86_64.iso

fi

echo "Done!"

