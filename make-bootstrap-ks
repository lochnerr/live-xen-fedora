#!/bin/sh
set -e

STARTUP="$HOME/startup"
[ -d "/home/lochnerr/startup" ] && STARTUP="/home/lochnerr/startup"
[ -d "../startup" ] && STARTUP="../startup"
[ -d "bootstrap" ] && STARTUP="bootstrap"
echo "Startup dir is: $STARTUP."

echo "" >bootstrap.ks

add_file_stanza() {

  FQN="$1"

  echo "cat >b64 <<-'__EOD__'" >>bootstrap.ks
  cat $FQN | base64 >>bootstrap.ks
  cat >>bootstrap.ks <<-"__EOF__"
	__EOD__

	__EOF__
  dir="$2"
  [ -z "$2" ] && dir="."
  echo "/usr/bin/cat b64 | /usr/bin/base64 -d > $dir/${FQN##*/}" >>bootstrap.ks
  [ -n "$3" ] && echo "/usr/bin/chmod $3 $dir/${FQN##*/}"        >>bootstrap.ks
  echo "/usr/sbin/restorecon $dir/${FQN##*/}"                    >>bootstrap.ks
  echo >>bootstrap.ks
}

add_file_stanza $STARTUP/bootstrap.service        /usr/lib/systemd/system  0744
add_file_stanza $STARTUP/bin/bootstrap-shutdown   /usr/local/bin  0755
add_file_stanza $STARTUP/bin/bootstrap-startup    /usr/local/bin  0755
add_file_stanza $STARTUP/bin/secure-sshd          /usr/local/bin  0755
add_file_stanza $STARTUP/bin/enable-authenticator-if-needed    /usr/local/bin  0755

cat >>bootstrap.ks <<-'__EOF__'
	/usr/bin/rm b64

	# Secure the sshd daemon.
	/usr/local/bin/secure-sshd            | tee -a /var/log/bootstrap-install.log

	# Disable the zram-generator.
	echo "Disabling the zram-generator."         >>/var/log/bootstrap-install.log
	touch /etc/systemd/zram-generator.conf

	# Disable the avahi-daemon.
	systemctl disable avahi-daemon.socket        >>/var/log/bootstrap-install.log
	systemctl disable avahi-daemon.service       >>/var/log/bootstrap-install.log

	# Enable and start the bootstrap service.
	/usr/bin/systemctl enable bootstrap.service  >>/var/log/bootstrap-install.log
	/usr/bin/systemctl start  bootstrap.service  >>/var/log/bootstrap-install.log

	# Write the results of securing sshd to the system log so that in a hosted
	# environment (e.g. aws) it can be verified that it ran correctly.  Or, what
	# went wrong if it failed.
	/usr/bin/logger -t bootstrap                -f /var/log/bootstrap-install.log

	__EOF__

